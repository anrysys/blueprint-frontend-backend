version: '3.8'

services:

  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgresql-data:/var/lib/postgresql/data
    ports:
      - "5432"
    networks:
      - marselca_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      update_config:
        order: stop-first  # Сначала остановить, потом запустить новое
        failure_action: rollback  # Откатиться при ошибке
        monitor: 30s  # Время мониторинга после обновления          
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3          
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d mydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    image: anrysys/backend-stack-swarm:latest
    ports:
      - "4000:4000"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      update_config:
        order: start-first
      # resources:
      #   limits:
      #     memory: 512M
      #   reservations:
      #     memory: 256M        
    environment:
      DB_HOST: ${POSTGRES_HOST}
      DB_NAME: ${POSTGRES_DB}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_PORT: ${POSTGRES_PORT}
    # command: >
    #   sh -c "
    #     sleep 10 &&
    #     npm start
    #   "
    labels:
      - traefik.enable=true
      - traefik.http.routers.site_1_backend.rule=Host(`api.pokersport.org`)
      - traefik.http.routers.site_1_backend.entrypoints=websecure
      - traefik.http.services.site_1_backend.loadbalancer.server.port=4000
      - traefik.http.routers.site_1_backend.tls.certresolver=letsencrypt
    networks:
      - marselca_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: anrysys/frontend-stack-swarm:latest
    ports:
      - "3000:3000"
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    environment:
      BACKEND_HOST: backend
    command: >
      sh -c "
        sleep 10 &&
        npm start
      "
    labels:
      - traefik.enable=true
      - traefik.http.routers.site_1_frontend.rule=Host(`pokersport.org`)
      - traefik.http.routers.site_1_frontend.entrypoints=websecure
      - traefik.http.services.site_1_frontend.loadbalancer.server.port=3000
      - traefik.http.routers.site_1_frontend.tls.certresolver=letsencrypt
    networks:
      - marselca_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s 
      retries: 3
      start_period: 40s  # Время на первоначальную инициализацию

volumes:
  postgresql-data:

networks:
  marselca_network:
    driver: overlay
    external: true